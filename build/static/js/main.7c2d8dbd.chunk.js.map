{"version":3,"sources":["Footer/index.js","Header/index.js","SelectCity/index.js","hooks/UseEffectFetch.js","Row/index.js","RowList/index.js","App.js","apis/config.js","index.js"],"names":["Footer","className","Header","SelectCity","onSearch","suggestions","useState","active","setActive","filtered","setFiltered","isShow","setIsShow","city","setCity","onClick1","e","currentTarget","innerText","name","onChange","value","newFilteredSuggestions","filter","suggestion","toLowerCase","startsWith","type","placeholder","autoComplete","onKeyDown","keyCode","length","map","index","onClick","country","id","UseEffectFetch","initialUrl","data","setData","setError","isLoading","setIsLoading","url","setUrl","useEffect","fetch","then","response","json","cod","message","catch","error","console","log","Row","dt","temp","description","icon","date","Date","getDay","toLocaleDateString","toLocaleTimeString","src","alt","RowList","weathers","main","weather","Math","round","App","cityList","list","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c2d8dbd.chunk.js","sourcesContent":["import React from 'react';\nimport './style.css';\n\nconst Footer = () => {\n  return (\n    <>\n      <h5 className=\"footer\">Copyright: Katerina Stepankova, 2021</h5>\n    </>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport './style.css';\n\nconst Header = () => {\n  return (\n    <>\n      <h1 className=\"header\">\n        Předpověď počasí na dnešek a následujících 5 dní:\n      </h1>\n    </>\n  );\n};\nexport default Header;\n","import React, { useState } from 'react';\nimport './style.css';\n\nconst SelectCity = ({ onSearch, suggestions }) => {\n  const [active, setActive] = useState(0);\n  const [filtered, setFiltered] = useState([]);\n  const [isShow, setIsShow] = useState(false);\n  const [city, setCity] = useState('');\n\n  const handleChange = (e) => {\n    const city = e.currentTarget.value;\n    const newFilteredSuggestions = suggestions.filter((suggestion) =>\n      suggestion.name.toLowerCase().startsWith(city.toLowerCase()),\n    );\n    setActive(0);\n    setFiltered(newFilteredSuggestions);\n    setIsShow(true);\n    setCity(e.currentTarget.value);\n  };\n\n  const onClick1 = (e) => {\n    setActive(0);\n    setFiltered([]);\n    setIsShow(false);\n    setCity(e.currentTarget.innerText);\n  };\n\n  const onKeyDown = (e) => {\n    if (e.keyCode === 13) {\n      // Enter key\n      setActive(0);\n      setIsShow(false);\n      setCity(filtered[active]);\n    } else if (e.keyCode === 38) {\n      // Up arrow\n      return active === 0 ? null : setActive(active - 1);\n    } else if (e.keyCode === 40) {\n      // Down arrow\n      return active - 1 === filtered.length ? null : setActive(active + 1);\n    }\n  };\n  const renderAutocomplete = () => {\n    if (isShow && city) {\n      if (filtered.length) {\n        return (\n          <div className=\"position\">\n            <ul className=\"autocomplete\">\n              {filtered.map((suggestion, index) => {\n                let className;\n                if (index === active) {\n                  className = 'active';\n                }\n                return (\n                  <li\n                    className={className}\n                    key={suggestion.id}\n                    onClick={onClick1}\n                  >\n                    {suggestion.name}, {suggestion.country}\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        );\n      } else {\n        return (\n          <div className=\"no-autocomplete\">\n            <em>Nenalezeno</em>\n          </div>\n        );\n      }\n    }\n    return <></>;\n  };\n\n  return (\n    <div>\n      <input\n        name=\"city\"\n        onChange={handleChange}\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Napiš město...\"\n        value={city}\n        autoComplete=\"off\"\n        onKeyDown={onKeyDown}\n      ></input>\n      {renderAutocomplete()}\n      <div>\n        <button className=\"getweather\" onClick={() => onSearch(city)}>\n          Potvrď\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default SelectCity;\n","import { useState, useEffect } from 'react';\n\nconst UseEffectFetch = (initialUrl) => {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const [url, setUrl] = useState(initialUrl);\n\n  useEffect(() => {\n    setError(null);\n    setIsLoading(true);\n    setData(null);\n\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setIsLoading(false);\n        if (data.cod >= 400) {\n          setError(data.message);\n          return;\n        }\n\n        setData(data);\n      })\n      .catch((error) => {\n        setIsLoading(false);\n        setError(error);\n      });\n  }, [url]);\n\n  console.log(data);\n\n  return { data, isLoading, setUrl };\n};\n\nexport default UseEffectFetch;\n","import React from 'react';\nimport './style.css';\n\nconst Row = ({ dt, temp, description, icon }) => {\n  const date = new Date(dt);\n\n  return (\n    <div className=\"row-header\">\n      {date.getDay(dt) === 1 && (\n        <div>\n          <p>Pondělí </p>\n          <p> {date.toLocaleDateString()} </p>\n        </div>\n      )}\n      {date.getDay(dt) === 2 && (\n        <div>\n          <p>Úterý </p>\n          <p> {date.toLocaleDateString()} </p>\n        </div>\n      )}\n      {date.getDay(dt) === 3 && (\n        <div>\n          <p>Středa </p>\n          <p> {date.toLocaleDateString()} </p>\n        </div>\n      )}\n      {date.getDay(dt) === 4 && (\n        <div>\n          <p>Čtvrtek </p>\n          <p> {date.toLocaleDateString()} </p>\n        </div>\n      )}\n      {date.getDay(dt) === 5 && (\n        <div>\n          <p>Pátek </p>\n          <p> {date.toLocaleDateString()} </p>\n        </div>\n      )}\n      {date.getDay(dt) === 6 && (\n        <div>\n          <p>Sobota </p>\n          <p> {date.toLocaleDateString()} </p>\n        </div>\n      )}\n      {date.getDay(dt) === 0 && (\n        <div>\n          <p>Neděle </p>\n          <p> {date.toLocaleDateString()} </p>\n        </div>\n      )}\n      <div className=\"row\">\n        <p className=\"time\">\n          {' '}\n          Čas:<br></br> {date.toLocaleTimeString()}\n        </p>\n\n        <p>\n          Teplota: <br></br>\n          {temp}\n        </p>\n        <p>{description}</p>\n        <img\n          className=\"image\"\n          src={`http://openweathermap.org/img/wn/${icon}@2x.png`}\n          alt=\"obr\"\n        ></img>\n      </div>\n    </div>\n  );\n};\n\nexport default Row;\n","import React from 'react';\nimport Row from '../Row';\n\nimport './style.css';\n\nconst RowList = ({ weathers }) => {\n \n\n  return (\n    <div className=\"list\">\n      {weathers.map(({ dt, main, weather }) => (\n        <div key={dt}>\n          <Row\n            temp={`${Math.round(main.temp)} °C`}\n            dt={dt * 1000}\n            description={weather[0].description}\n            icon={weather[0].icon}\n          />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default RowList;\n","import './App.css';\nimport Footer from './Footer';\nimport Header from './Header';\nimport SelectCity from './SelectCity';\nimport UseEffectFetch from './hooks/UseEffectFetch';\nimport { API_KEY, API_BASE_URL } from './apis/config';\nimport RowList from './RowList';\nimport cityList from './data/cityList.json';\n\nconst App = () => {\n  const { data, isLoading, setUrl, error } = UseEffectFetch();\n\n  // error handling and loading\n  const getContent = () => {\n    if (error) return <h2>Chyba při získání dat</h2>;\n    if (!data && isLoading) return <h2 className=\"loading\">Hledám...</h2>;\n    if (!data) return null;\n    return <RowList weathers={data.list} />;\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n\n      <SelectCity\n        suggestions={cityList}\n        onSearch={(city) => {\n          setUrl(\n            `${API_BASE_URL}//data/2.5/forecast?q=${city}&units=metric&lang=cz&appid=${API_KEY}`,\n          );\n        }}\n      />\n      {getContent()}\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","export const API_KEY = '268d868d5c79cc6df46887a20f107d47';\nexport const API_BASE_URL = 'http://api.openweathermap.org/';","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n"],"sourceRoot":""}